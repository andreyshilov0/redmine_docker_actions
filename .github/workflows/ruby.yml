name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.10

      - name: Install Bundler
        run: gem install bundler:2.2.29

      - name: Install Dependencies
        run: bundle install --jobs 4 --retry 3 --without development test

      - name: Database Setup
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: bundle exec rails db:create db:migrate RAILS_ENV=production

      - name: Build and Push Docker Image
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          echo "${{ secrets.TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker build -t docker.pkg.github.com/${{ github.repository }}/myredmine:latest .
          docker push docker.pkg.github.com/${{ github.repository }}/myredmine:latest

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # Write your deployment script here
          # Example: ssh into production server and pull the latest Docker image
